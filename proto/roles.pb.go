// Code generated by protoc-gen-go. DO NOT EDIT.
// source: roles.proto

package chremoas_role

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DiscordRole struct {
	Name        string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Color       int32  `protobuf:"varint,2,opt,name=Color" json:"Color,omitempty"`
	Hoist       bool   `protobuf:"varint,3,opt,name=Hoist" json:"Hoist,omitempty"`
	Position    int32  `protobuf:"varint,4,opt,name=Position" json:"Position,omitempty"`
	Permissions int32  `protobuf:"varint,5,opt,name=Permissions" json:"Permissions,omitempty"`
	Managed     bool   `protobuf:"varint,6,opt,name=Managed" json:"Managed,omitempty"`
	Mentionable bool   `protobuf:"varint,7,opt,name=Mentionable" json:"Mentionable,omitempty"`
	RoleNick    string `protobuf:"bytes,8,opt,name=RoleNick" json:"RoleNick,omitempty"`
}

func (m *DiscordRole) Reset()                    { *m = DiscordRole{} }
func (m *DiscordRole) String() string            { return proto.CompactTextString(m) }
func (*DiscordRole) ProtoMessage()               {}
func (*DiscordRole) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *DiscordRole) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DiscordRole) GetColor() int32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *DiscordRole) GetHoist() bool {
	if m != nil {
		return m.Hoist
	}
	return false
}

func (m *DiscordRole) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *DiscordRole) GetPermissions() int32 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

func (m *DiscordRole) GetManaged() bool {
	if m != nil {
		return m.Managed
	}
	return false
}

func (m *DiscordRole) GetMentionable() bool {
	if m != nil {
		return m.Mentionable
	}
	return false
}

func (m *DiscordRole) GetRoleNick() string {
	if m != nil {
		return m.RoleNick
	}
	return ""
}

type AddRoleRequest struct {
	Role *DiscordRole `protobuf:"bytes,1,opt,name=Role" json:"Role,omitempty"`
}

func (m *AddRoleRequest) Reset()                    { *m = AddRoleRequest{} }
func (m *AddRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*AddRoleRequest) ProtoMessage()               {}
func (*AddRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *AddRoleRequest) GetRole() *DiscordRole {
	if m != nil {
		return m.Role
	}
	return nil
}

type AddRoleResponse struct {
}

func (m *AddRoleResponse) Reset()                    { *m = AddRoleResponse{} }
func (m *AddRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*AddRoleResponse) ProtoMessage()               {}
func (*AddRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type RemoveRoleRequest struct {
	Name string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
}

func (m *RemoveRoleRequest) Reset()                    { *m = RemoveRoleRequest{} }
func (m *RemoveRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveRoleRequest) ProtoMessage()               {}
func (*RemoveRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *RemoveRoleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RemoveRoleResponse struct {
}

func (m *RemoveRoleResponse) Reset()                    { *m = RemoveRoleResponse{} }
func (m *RemoveRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveRoleResponse) ProtoMessage()               {}
func (*RemoveRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type GetRolesRequest struct {
}

func (m *GetRolesRequest) Reset()                    { *m = GetRolesRequest{} }
func (m *GetRolesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRolesRequest) ProtoMessage()               {}
func (*GetRolesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

type GetRolesResponse struct {
	Roles []*DiscordRole `protobuf:"bytes,1,rep,name=Roles" json:"Roles,omitempty"`
}

func (m *GetRolesResponse) Reset()                    { *m = GetRolesResponse{} }
func (m *GetRolesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRolesResponse) ProtoMessage()               {}
func (*GetRolesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *GetRolesResponse) GetRoles() []*DiscordRole {
	if m != nil {
		return m.Roles
	}
	return nil
}

type SyncRoles struct {
	Source      string `protobuf:"bytes,1,opt,name=Source" json:"Source,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=Destination" json:"Destination,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
}

func (m *SyncRoles) Reset()                    { *m = SyncRoles{} }
func (m *SyncRoles) String() string            { return proto.CompactTextString(m) }
func (*SyncRoles) ProtoMessage()               {}
func (*SyncRoles) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *SyncRoles) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *SyncRoles) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *SyncRoles) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SyncRolesRequest struct {
}

func (m *SyncRolesRequest) Reset()                    { *m = SyncRolesRequest{} }
func (m *SyncRolesRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncRolesRequest) ProtoMessage()               {}
func (*SyncRolesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

type SyncRolesResponse struct {
	Roles []*SyncRoles `protobuf:"bytes,1,rep,name=Roles" json:"Roles,omitempty"`
}

func (m *SyncRolesResponse) Reset()                    { *m = SyncRolesResponse{} }
func (m *SyncRolesResponse) String() string            { return proto.CompactTextString(m) }
func (*SyncRolesResponse) ProtoMessage()               {}
func (*SyncRolesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *SyncRolesResponse) GetRoles() []*SyncRoles {
	if m != nil {
		return m.Roles
	}
	return nil
}

func init() {
	proto.RegisterType((*DiscordRole)(nil), "chremoas.role.DiscordRole")
	proto.RegisterType((*AddRoleRequest)(nil), "chremoas.role.AddRoleRequest")
	proto.RegisterType((*AddRoleResponse)(nil), "chremoas.role.AddRoleResponse")
	proto.RegisterType((*RemoveRoleRequest)(nil), "chremoas.role.RemoveRoleRequest")
	proto.RegisterType((*RemoveRoleResponse)(nil), "chremoas.role.RemoveRoleResponse")
	proto.RegisterType((*GetRolesRequest)(nil), "chremoas.role.GetRolesRequest")
	proto.RegisterType((*GetRolesResponse)(nil), "chremoas.role.GetRolesResponse")
	proto.RegisterType((*SyncRoles)(nil), "chremoas.role.SyncRoles")
	proto.RegisterType((*SyncRolesRequest)(nil), "chremoas.role.SyncRolesRequest")
	proto.RegisterType((*SyncRolesResponse)(nil), "chremoas.role.SyncRolesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Roles service

type RolesClient interface {
	AddRole(ctx context.Context, in *AddRoleRequest, opts ...client.CallOption) (*AddRoleResponse, error)
	RemoveRole(ctx context.Context, in *RemoveRoleRequest, opts ...client.CallOption) (*RemoveRoleResponse, error)
	GetRoles(ctx context.Context, in *GetRolesRequest, opts ...client.CallOption) (*GetRolesResponse, error)
	SyncRoles(ctx context.Context, in *SyncRolesRequest, opts ...client.CallOption) (*SyncRolesResponse, error)
}

type rolesClient struct {
	c           client.Client
	serviceName string
}

func NewRolesClient(serviceName string, c client.Client) RolesClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "chremoas.role"
	}
	return &rolesClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *rolesClient) AddRole(ctx context.Context, in *AddRoleRequest, opts ...client.CallOption) (*AddRoleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Roles.AddRole", in)
	out := new(AddRoleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) RemoveRole(ctx context.Context, in *RemoveRoleRequest, opts ...client.CallOption) (*RemoveRoleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Roles.RemoveRole", in)
	out := new(RemoveRoleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) GetRoles(ctx context.Context, in *GetRolesRequest, opts ...client.CallOption) (*GetRolesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Roles.GetRoles", in)
	out := new(GetRolesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) SyncRoles(ctx context.Context, in *SyncRolesRequest, opts ...client.CallOption) (*SyncRolesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Roles.SyncRoles", in)
	out := new(SyncRolesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Roles service

type RolesHandler interface {
	AddRole(context.Context, *AddRoleRequest, *AddRoleResponse) error
	RemoveRole(context.Context, *RemoveRoleRequest, *RemoveRoleResponse) error
	GetRoles(context.Context, *GetRolesRequest, *GetRolesResponse) error
	SyncRoles(context.Context, *SyncRolesRequest, *SyncRolesResponse) error
}

func RegisterRolesHandler(s server.Server, hdlr RolesHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Roles{hdlr}, opts...))
}

type Roles struct {
	RolesHandler
}

func (h *Roles) AddRole(ctx context.Context, in *AddRoleRequest, out *AddRoleResponse) error {
	return h.RolesHandler.AddRole(ctx, in, out)
}

func (h *Roles) RemoveRole(ctx context.Context, in *RemoveRoleRequest, out *RemoveRoleResponse) error {
	return h.RolesHandler.RemoveRole(ctx, in, out)
}

func (h *Roles) GetRoles(ctx context.Context, in *GetRolesRequest, out *GetRolesResponse) error {
	return h.RolesHandler.GetRoles(ctx, in, out)
}

func (h *Roles) SyncRoles(ctx context.Context, in *SyncRolesRequest, out *SyncRolesResponse) error {
	return h.RolesHandler.SyncRoles(ctx, in, out)
}

func init() { proto.RegisterFile("roles.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xd1, 0xae, 0xd2, 0x40,
	0x14, 0xb4, 0x40, 0xa1, 0x9c, 0x46, 0xa1, 0x27, 0xc4, 0x6c, 0x9a, 0x28, 0xb5, 0x2f, 0xf2, 0xd4,
	0x18, 0xfc, 0x01, 0x0d, 0x24, 0x1a, 0x13, 0x08, 0x29, 0x4f, 0x3e, 0x96, 0xb2, 0xd1, 0x8d, 0x6d,
	0x17, 0xbb, 0xc5, 0xc4, 0x4f, 0xf4, 0x3b, 0xfc, 0x11, 0xb3, 0xdb, 0x6d, 0x59, 0xea, 0xed, 0xbd,
	0x6f, 0xcc, 0xec, 0x9c, 0x61, 0xce, 0x9c, 0x14, 0xdc, 0x92, 0x67, 0x54, 0x44, 0x97, 0x92, 0x57,
	0x1c, 0x9f, 0xa7, 0xdf, 0x4b, 0x9a, 0xf3, 0x44, 0x44, 0x92, 0x0d, 0xff, 0x5a, 0xe0, 0x6e, 0x99,
	0x48, 0x79, 0x79, 0x8e, 0x79, 0x46, 0x11, 0x61, 0xb4, 0x4f, 0x72, 0x4a, 0xac, 0xc0, 0x5a, 0x4d,
	0x63, 0xf5, 0x1b, 0x17, 0x60, 0x6f, 0x78, 0xc6, 0x4b, 0x32, 0x08, 0xac, 0x95, 0x1d, 0xd7, 0x40,
	0xb2, 0x9f, 0x39, 0x13, 0x15, 0x19, 0x06, 0xd6, 0xca, 0x89, 0x6b, 0x80, 0x3e, 0x38, 0x07, 0x2e,
	0x58, 0xc5, 0x78, 0x41, 0x46, 0x4a, 0xde, 0x62, 0x0c, 0xc0, 0x3d, 0xd0, 0x32, 0x67, 0x42, 0x30,
	0x5e, 0x08, 0x62, 0xab, 0x67, 0x93, 0x42, 0x02, 0x93, 0x5d, 0x52, 0x24, 0xdf, 0xe8, 0x99, 0x8c,
	0x95, 0x6b, 0x03, 0xe5, 0xec, 0x8e, 0x16, 0xd2, 0x26, 0x39, 0x65, 0x94, 0x4c, 0xd4, 0xab, 0x49,
	0xc9, 0x7f, 0x96, 0x1b, 0xec, 0x59, 0xfa, 0x83, 0x38, 0x2a, 0x7d, 0x8b, 0xc3, 0x0f, 0xf0, 0xe2,
	0xe3, 0x59, 0x2d, 0x18, 0xd3, 0x9f, 0x57, 0x2a, 0x2a, 0x8c, 0x60, 0x24, 0xa1, 0xda, 0xd3, 0x5d,
	0xfb, 0xd1, 0x5d, 0x2b, 0x91, 0xd1, 0x48, 0xac, 0x74, 0xa1, 0x07, 0xb3, 0xd6, 0x41, 0x5c, 0x78,
	0x21, 0x68, 0xf8, 0x16, 0xbc, 0x98, 0xe6, 0xfc, 0x17, 0x35, 0x7d, 0x1f, 0xe8, 0x2f, 0x5c, 0x00,
	0x9a, 0x42, 0x3d, 0xee, 0xc1, 0xec, 0x13, 0xad, 0x24, 0x25, 0xf4, 0x70, 0xb8, 0x85, 0xf9, 0x8d,
	0xaa, 0x65, 0xf8, 0x0e, 0x6c, 0x45, 0x10, 0x2b, 0x18, 0x3e, 0x91, 0xb4, 0x16, 0x86, 0x5f, 0x61,
	0x7a, 0xfc, 0x5d, 0xa4, 0x0a, 0xe0, 0x4b, 0x18, 0x1f, 0xf9, 0xb5, 0x4c, 0x9b, 0x44, 0x1a, 0xc9,
	0x3e, 0xb7, 0x54, 0x54, 0xac, 0x48, 0xd4, 0xa9, 0x06, 0xea, 0xd1, 0xa4, 0xda, 0x4d, 0x86, 0xc6,
	0x26, 0x08, 0xf3, 0xd6, 0xba, 0x09, 0xbd, 0x01, 0xcf, 0xe0, 0x74, 0xea, 0xe8, 0x3e, 0x35, 0xe9,
	0xa4, 0xbe, 0x0d, 0xd4, 0xb2, 0xf5, 0x9f, 0x81, 0x1e, 0xc0, 0x2f, 0x30, 0xd1, 0x45, 0xe3, 0xab,
	0xce, 0xd4, 0xfd, 0x09, 0xfd, 0xd7, 0x7d, 0xcf, 0xba, 0xe0, 0x67, 0x78, 0x04, 0xb8, 0x15, 0x8f,
	0x41, 0x47, 0xff, 0xdf, 0xf1, 0xfc, 0x37, 0x8f, 0x28, 0x5a, 0xd3, 0x1d, 0x38, 0xcd, 0x91, 0xb0,
	0x1b, 0xa1, 0x73, 0x50, 0x7f, 0xd9, 0xfb, 0xde, 0xda, 0x1d, 0xcc, 0x6b, 0x2d, 0x7b, 0x7b, 0xd2,
	0x86, 0x41, 0xbf, 0xa0, 0x71, 0x3c, 0x8d, 0xd5, 0x87, 0xfe, 0xfe, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x35, 0xdc, 0xfe, 0x46, 0xf7, 0x03, 0x00, 0x00,
}
